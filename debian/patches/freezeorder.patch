diff --git a/lib/include/dynbuf.h b/lib/include/dynbuf.h
index a855223..15a3516 100644
--- a/lib/include/dynbuf.h
+++ b/lib/include/dynbuf.h
@@ -64,6 +64,11 @@ DynBuf_Append(DynBuf *b,        // IN
               size_t size);     // IN
 
 Bool
+DynBuf_Prefix(DynBuf *b,        // IN
+              void const *data, // IN
+              size_t size);     // IN
+
+Bool
 DynBuf_Trim(DynBuf *b); // IN
 
 Bool
diff --git a/lib/misc/dynbuf.c b/lib/misc/dynbuf.c
index 5fb5154..8644a44 100644
--- a/lib/misc/dynbuf.c
+++ b/lib/misc/dynbuf.c
@@ -327,6 +327,55 @@ DynBuf_Append(DynBuf *b,        // IN
 /*
  *-----------------------------------------------------------------------------
  *
+ * DynBuf_Prefix --
+ *
+ *      Prefix data at the beginning of a dynamic buffer. 'size' is the size 
+ *      of the data. If it is <= 0, no operation is performed.
+ *
+ * Results:
+ *      TRUE on success
+ *      FALSE on failure (not enough memory)
+ *
+ * Side effects:
+ *      None
+ *
+ *-----------------------------------------------------------------------------
+ */
+
+Bool
+DynBuf_Prefix(DynBuf *b,        // IN
+              void const *data, // IN
+              size_t size)      // IN
+{
+   size_t new_size;
+
+   ASSERT(b);
+
+   if (size <= 0) {
+      return TRUE;
+   }
+
+   ASSERT(data);
+
+   new_size = b->size + size;
+   if (new_size > b->allocated) {
+      /* Not enough room */
+      if (DynBuf_Enlarge(b, new_size) == FALSE) {
+         return FALSE;
+      }
+   }
+
+   memmove(b->data + size, b->data, b->size);
+   memcpy(b->data, data, size);
+   b->size = new_size;
+
+   return TRUE;
+}
+
+
+/*
+ *-----------------------------------------------------------------------------
+ *
  * DynBuf_SafeInternalAppend --
  *
  *      Append data at the end of a dynamic buffer. Memory allocation failure
diff --git a/lib/syncDriver/syncDriverLinux.c b/lib/syncDriver/syncDriverLinux.c
index 81d16e8..ba8d28a 100644
--- a/lib/syncDriver/syncDriverLinux.c
+++ b/lib/syncDriver/syncDriverLinux.c
@@ -70,8 +70,8 @@ LinuxFiThaw(const SyncDriverHandle handle)
    LinuxDriver *sync = (LinuxDriver *) handle;
    SyncDriverErr err = SD_SUCCESS;
 
-   for (i = 0; i < sync->fdCnt; i++) {
-      if (ioctl(sync->fds[i], FITHAW) == -1) {
+   for (i = sync->fdCnt; i > 0; i--) {
+      if (ioctl(sync->fds[i-1], FITHAW) == -1) {
          err = SD_ERROR;
       }
    }
diff --git a/lib/syncDriver/syncDriverPosix.c b/lib/syncDriver/syncDriverPosix.c
index 402421a..6d17ae1 100644
--- a/lib/syncDriver/syncDriverPosix.c
+++ b/lib/syncDriver/syncDriverPosix.c
@@ -84,8 +84,8 @@ SyncDriverListMounts(void)
        * Add a separator if it's not the first path, and add the path to the
        * tail of the list.
        */
-      if ((DynBuf_GetSize(&buf) != 0 && !DynBuf_Append(&buf, ":", 1))
-          || !DynBuf_Append(&buf,
+      if ((DynBuf_GetSize(&buf) != 0 && !DynBuf_Prefix(&buf, ":", 1))
+          || !DynBuf_Prefix(&buf,
                             MNTINFO_MNTPT(mntinfo),
                             strlen(MNTINFO_MNTPT(mntinfo)))) {
          goto exit;
